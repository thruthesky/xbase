<?php

class Database extends ezSQL_sqlite3 {

    /**
     * It captures ezSQL->query() and "Database Warning message" to print out as SQL error in JSON.
     *
     * @param $query
     * @return bool|int|void
     */
    public function query($query)
    {
        ob_start();
        $re = parent::query($query); // TODO: Change the autogenerated stub
        $warning = ob_get_clean();
        if ( $warning ) {
            json_error( -1122, 'DATABASE WARNING: ' . $warning);
        }
        if ( $this->captured_errors ) {
            foreach ( $this->captured_errors as $e ) {
                json_error( -1120, "$e[error_str] - $e[query]");
            }
        }
        return $re;
    }



    /* @short Inserts a record into a table.
     *
     * @note
    Do not use 'REPLACE INTO'

     *
     * @param string $table_name
    table name
     * @param associative-array $values
    fields and its values.
     * @return
    idx number on success,
    0 on fail.

    This is the same as PDO_STATEMENT::execute
    @code
    $db->insert('config', array('code'=>'insert_test', 'data'=>'abc def', 'stamp'=>time()));
    @endcode


     *
     */
    public function insert($table_name, $kvs) {
        foreach($kvs as $key => $val) {
            $key_list[] = $key;
            $val_list[] = $this->escape($val);
        }
        $keys = "`".implode("`,`",$key_list)."`";
        $vals = "'".implode("','",$val_list)."'";
        $q = "INSERT INTO `{$table_name}` ({$keys}) VALUES ({$vals})";
        $this->query($q);
        return $this->insert_id;
    }


    /** @short updates table
     *
     *
     * @param $table - the name of the table to be updated.
     * @param $kvs - the array of field & value.
     * @param $conds - array of condition for WHERE statement.
     * @code
     * $db->update('test', array('id'=>'id1-updated', 'name'=>'name2'), array('id'=>'id1'));
     * @endcode
     *
     */
    function update($table, $kvs, $conds)
    {
        foreach($kvs as $k => $v) {
            $v = $this->escape($v);
            $k = $this->escape($k);
            $sets[] = "$k='$v'";
        }
        $set = implode(", ", $sets);
        $q = "UPDATE $table SET $set WHERE $conds";
        $this->query($q);
    }


}

